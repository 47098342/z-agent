#!/usr/bin/env python2.7
# -*- coding:utf8 -*-

from gevent import monkey
monkey.patch_all()

#!/usr/bin/env python
# -*- coding:utf8 -*-

import gevent
from gevent.threadpool import ThreadPool
from gevent.pool import Pool
from gevent.server import StreamServer
from socket import error as socket_error
    
class CommandRunner(object):
    def __init__(self):
        pass
    def __call__(self,socket, address):
        try:
            socket.settimeout(30)
            while not socket.closed:
                #需要添加身份认证
                data=socket.recv(1024)
                socket.sendall('HTTP/1.1 200 OK\n\npid: %s count: %s  data: %s!!\n'%(os.getpid(),self.count,data))
            socket.close()
        except socket_error,e:
            (errno,msg)=e
            print("error %s: %s"%(errno,msg))
            if not socket.closed:
                socket.close()
        
    @staticmethod
    def serve_forever():
        __doc__ = '''
        多进程时使用
        '''
        server.start()
        server.start_accepting()
        server._stop_event.wait()
        

if __name__ == "__main__":
    #start worker thread pool
    pool =ThreadPool(4)

    #需要添加配置读取代码
    server = StreamServer(('',10052), CommandRunner(), backlog=100000)
    server.init_socket()
    
    server.start()
    server.start_accepting()
    server._stop_event.wait()
